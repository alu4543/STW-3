var expect=chai.expect,should=chai.should();describe("Measure Units Converter",function(){var e;beforeEach(function(){e=sinon.sandbox.create(),e.stub(window.console,"log"),e.stub(window.console,"error")}),afterEach(function(){e.restore()}),describe("Constructor",function(){it("Constructor : should have a default type of measure object created",function(){var e=new Measure;expect(e.type).to.equal("S.I")}),it("Constructor : should have a default value of measure object created",function(){var e=new Measure;expect(e.value).to.equal(0)}),it("Constructor : should set Measure type if provided",function(){var e=new Measure(0,"unidad");expect(e.type).to.equal("unidad")}),it("Constructor : should set Measure value if provided",function(){var e=new Measure(100,"unidad");expect(e.value).to.equal(100)}),it("Constructor : should have a default value of Temperature object created",function(){var e=new Temperature;expect(e.value).to.equal(0)}),it("Constructor : should have a default value of Celsius object created",function(){var e=new Celsius;expect(e.value).to.equal(0)}),it("Constructor : should have a default value of Kelvin object created",function(){var e=new Kelvin;expect(e.value).to.equal(0)}),it("Constructor : should have a default value of Farenheit object created",function(){var e=new Farenheit;expect(e.value).to.equal(0)})}),describe("Measure Objects Convertion",function(){it("Measure Objects : should not be converted an Abstract Measure object to Farenheit",function(){expect(function(){new Measure(0).toFarenheit()}).to["throw"](Error)}),it("Measure Objects : should not be converted an Abstract Temperature object to Farenheit",function(){expect(function(){new Temperature(0).toFarenheit()}).to["throw"](Error)}),it("Measure Objects : the 'type' attribute must be a String",function(){var e=new Temperature(0,"c");expect(e.type).to.be.a("string")}),it("CMeasure Objects : celsius type must be equal to 'c'",function(){var e=new Celsius(0);e.should.have.property("type").equal("c")}),it("Measure Objects : farenheit type must be equal to 'f'",function(){var e=new Farenheit(0);e.should.have.property("type").equal("f")}),it("Measure Objects : kelvin type must be equal to 'k'",function(){var e=new Kelvin(0);e.should.have.property("type").equal("k")}),it("Measure Objects : should be converted an Celsius object to Farenheit : 	 0 Celsius = 32 Farenheit",function(){var e=new Celsius(0);e.toFarenheit().should.equal(32)}),it("Measure Objects : should be converted an Celsius object to Kelvin : 	  0 Celsius = 273.15 Kelvin",function(){var e=new Celsius(0);e.toKelvin().should.equal(273.15)}),it("Measure Objects : should be converted an Farenheit object to Celsius : 	 32 Farenheit = 0 Celsius",function(){var e=new Farenheit(32);e.toCelsius().should.equal(0)}),it("Measure Objects : should be converted an Farenheit object to Kelvin : 	 32 Farenheit = 273.15 Kelvin",function(){var e=new Farenheit(32);e.toKelvin().should.equal(273.15000000000003)}),it("Measure Objects : should be converted an Kelvin object to Celsius : 	 273.15 Kelvin = 32 Celsius",function(){var e=new Kelvin(273.15);e.toCelsius().should.equal(31.999999999999943)}),it("Measure Objects : should be converted an Kelvin object to Farenheit : 	 273.15 Kelvin = 0 Farenheit",function(){var e=new Kelvin(273.15);e.toFarenheit().should.equal(0)})}),describe("Length Objects Convertion",function(){it("should not be converted an Abstract Length object to Meter",function(){expect(function(){new Length(0).toMeter()}).to["throw"](Error)}),it("Length Objects : The 'value' attribute must be a Number",function(){var e=new Length(0,"m");expect(e.value).to.be.a("Number")}),it("Length Objects : The 'type' attribute must be a String",function(){var e=new Length(0,"m");expect(e.type).to.be.a("string")}),it("Length Objects : should be converted a Meter object to Centimeter : 	 1 Meter = 100 Centimeter",function(){var e=new Meter(1);e.toCentimeter().should.equal(100)}),it("Length Objects : should be converted a Meter object to Kilometer : 	 1 Meter = 1000 Kilometer",function(){var e=new Meter(1);e.toKilometer().should.equal(.001)}),it("Length Objects : should be converted a Kilometer object to Meter : 	 1 Kilometer = 1000 Meter",function(){var e=new Kilometer(1);e.toMeter().should.equal(1e3)}),it("Length Objects : should be converted a Kilometer object to Centimeter : 	 1 Kilometer = 100000  Centimeter",function(){var e=new Kilometer(1);e.toCentimeter().should.equal(1e5)}),it("Length Objects : should be converted an Centimeter object to Meter : 	 1 Centimeter = 0.001 Centimeter",function(){var e=new Centimeter(1);e.toMeter().should.equal(.001)}),it("Length Objects : should be converted an Centimeter object to Farenheit : 	 1 Centimeter = 100000 Kilometer",function(){var e=new Centimeter(1);e.toKilometer().should.equal(1e-5)})}),describe("HTML UI",function(){it("HTML UI : should print error message if no correct parameteres is passed in ",function(){original.value="0unit",calculate(),expect(converted.innerHTML).to.equal("ERROR! Try something like  0 celsius,-2.3e-4kelvin, 32ºF, -45K, 3.4e2 c, -2.3e-4kelvin, 0 meter, -2.3m, 1Km, 45.3centimmeter, 3.4e2 cm, 2.3e-4km,.."),expect(converted2.innerHTML).to.equal("ERROR! Try something like  0 celsius,-2.3e-4kelvin, 32ºF, -45K, 3.4e2 c, -2.3e-4kelvin, 0 meter, -2.3m, 1Km, 45.3centimmeter, 3.4e2 cm, 2.3e-4km,..")}),it("HTML UI : 0c will = 32 Farenheit = 273.15 Kelvin",function(){original.value="0c",calculate(),expect(converted.innerHTML).to.equal("32.000000 Farenheit"),expect(converted2.innerHTML).to.equal("273.150000 Kelvin")}),it("HTML UI : 32f will = 0 Celsius = 273.15 Kelvin",function(){original.value="32f",calculate(),expect(converted.innerHTML).to.equal("0.000000 Celsius"),expect(converted2.innerHTML).to.equal("273.150000 Kelvin")}),it("HTML UI : 1m will = 100 Centimeter = 0.001 Kilometer",function(){original.value="1m",calculate(),expect(converted.innerHTML).to.equal("100.000000 Centimeter"),expect(converted2.innerHTML).to.equal("0.001000 Kilometer")}),it("HTML UI : 1km will = 1000 Centimeter = 0.200000 Kilometer",function(){original.value="1km",calculate(),expect(converted.innerHTML).to.equal("1000.000000 Meter"),expect(converted2.innerHTML).to.equal("100000.000000 Centimeter")})}),describe("Errors & Logs",function(){it("Errors & Logs : should log parameters passed to GetMeasure()",function(){new Temperature(2,"c").getMeasure(),sinon.assert.notCalled(console.error),sinon.assert.calledOnce(console.log),sinon.assert.calledWithExactly(console.log,"The Mesure is 2c")}),it("Errors & Logs : should throw if no parameteres is passed in ",function(){(new Temperature).getMeasure(),sinon.assert.calledWithExactly(console.error,"Data missing")}),it("Errors & Logs : should log Celsius toFarenheit()",function(){new Celsius(0).toFarenheit();sinon.assert.notCalled(console.error),sinon.assert.calledOnce(console.log),sinon.assert.calledWithExactly(console.log,"Converted_1 is 32 Farenheit")}),it("Errors & Logs : should log Celsius toFarenheit()",function(){new Celsius(0).toKelvin();sinon.assert.notCalled(console.error),sinon.assert.calledOnce(console.log),sinon.assert.calledWithExactly(console.log,"Converted_2 is 273.15 Kelvin")}),it("Errors & Logs : should log Kilometer toMeter()",function(){new Kilometer(1).toMeter();sinon.assert.notCalled(console.error),sinon.assert.calledOnce(console.log),sinon.assert.calledWithExactly(console.log,"Converted_1 is 1000 Meter")}),it("Errors & Logs : should log Kilometer toCentimeter()",function(){new Kilometer(1).toCentimeter();sinon.assert.notCalled(console.error),sinon.assert.calledOnce(console.log),sinon.assert.calledWithExactly(console.log,"Converted_2 is 100000 Centimeter")})})});